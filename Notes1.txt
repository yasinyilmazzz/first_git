This is my first GitHub

echo "# first_git" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin git@github.com:yasinyilmazzz/first_git.git
git push -u origin main

======
git add .
git commit -m "Hello World"
git push

=======
Git : Local Repo
GitHub : Remote Repo
Steps for pushing the first project?
git init
git add .  ===>>>> add all projects in the staging area.
git add “file1name”  ====>>>> add only one single file in the staging area
git add “file2name”  ====>>>> add only one single file in the staging area
git commit -m “message”
git branch -M main
 git remote add origin https...  github repository link
git push -u origin main
Steps for pushing new commits for the same project
Git add .
Git commit -m “message”
Git push

==========

Steps for getting the code from remote repo?
git pull
git fetch + git merge = git pull
What is conflict? When I happens?
It is the error texts in the files
It happens when devs pulls the code
It happens Same lines has different codes
How to resolve conflict?
Manually fix it
Steps after conflict?
Manually fix and push the clean code
Git add .
Git commit -m
Git push
Can I push the my local commits if I do not have the latest commit from GitHub
No. Because of the security, we must have the latest code/commit from GitHub
PULL BEFORE PUSH => (git pull -> git add . -> git commit -m “message” -> git push)

===========
Create a new branch : git branch ahmet
 Check the branches: git branch -> you should see ahmet branch
Switch to the feature branch : git checkout ahmet
Now I’m on the feature branch. All changes I make will be only on this branch
Create a new class and write some code on this branch
MyLocalClass1
Create a new version on the branch
    git add .
    git commit -m “my local commit 1"
    git push --->>> NOTE : Gives error. First push must be done using below code
    git push --set-upstream origin ahmet
Check if your codes are in remote repository
Question 1: Does ahmet branch have the codes we just pushed? YESSSSSSS
Question 2: Does master have the codes we just pushed?  NOOOOO. WE HAVE TO MERGE ALL CODES TO MASTER.NEXT SLIDE
1. git branch ahmet_sprint10_canary
2. git checkout ahmet_sprint10_canary
3. Write your code in this feature branch
-crate a new file in feature branch: Notes9.txt
-commit the the code
	-git add .
	-git commit -m "message"
	 git push --set-upstream origin ***"branch name"***git checkot out


GITHUB DAY 1:
FIRST CODE PUSH:
git init  ->>>> Create a .git folder in our computer
git add .  ->>>
git commit -m "first commit" ->>> Create a new version
git branch -M main ->>> Creating a new branch called main
git remote add origin YOURPROJECTLINK ->>> Connects Local Project(git) to Remote repository(github)
git push -u origin main
=========
SECOND CODE PUSH:
git add .
git commit -m "updating the code"
git push
=========
GIT IGNORE:
WHAT? 
.gitignore should be created at the project level
It is used to ignore/hide the files
The files in .gitignore will not be added and committed and pused
-----------------------------------
Example:
create 3 files : Notes2.txt, Notes3.txt, Notes4.txt
And Create .gitignore file in the project level
Then put Notes3.txt path in .gitignore file
Then commit
Then push
Then Notes3.txt should not be pushed in GitHub
NOTE: MAKE SURE TO SAVE AFTER EACH CHANGE controll+s
============
GIT PULL
: Please, commit your changes before merging.
git add .
git commit -m "message"
git pull -> GOT ERROR Saying pull before push
git pull 
git add .
git commit - "message"
git push -> NO ERROR
NOTE: GIT PULL before GIT PUSH
============
GIT CONFLICT:
Occurs when same class and line have different code
When we merge these codes then we get conflict message
SOLUTION: 
Manually fix and create a new commit and push the clean code
===========


DAY02
BRANCHING
1. git branch ahmet_sprint10_canary
2. git checkout ahmet_sprint10_canary
3. Write your code in this feature branch
-crate a new file in feature branch: Notes9.txt
-commit the the code
    -git add .
    -git commit -m "message"
    -git push --set-upstream origin ahmet_sprint10_canary
-After the last step, Pull Request will automatically created in GITHUB
-Then the reponsible person will review the pull request and merge code to master branch
========
After the merge, feature branches and REMOTE MASTER is p to date
BUT local master is not updated
=======
4. git checkout main
5. git pull
============
COLLABARATION:
Since there is only one project at work, and all devs must work
on the same project, it is important to understand how collabaration is done
--------
*All company projects are private. We get access to the project,
and become a collabarator. Then we can make changes in the project and push it.
*We should not work on the master/main branch. We need to create a new branch,
write our code in that branch, and pushed.
*After we push our code from local feature/side branch, 
it goes to REMOTE FEATURE/SIDE branch. It doesn't go to REMOTE MASTER.
To merge the code from REMOTE FEATURE to REMOTE MASTER, leads will 
create PULL REQUEST and APPROVE the PULL REQUEST.
After approval, remote feature codes will be merged in REMOTE MASTER